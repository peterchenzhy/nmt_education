<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nmt.education.service.course.schedule.CourseSchedulePoMapper">
  <resultMap id="BaseResultMap" type="com.nmt.education.pojo.po.CourseSchedulePo">
    <!--@mbg.generated-->
    <!--@Table course_schedule-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="teacher_id" jdbcType="BIGINT" property="teacherId" />
    <result column="course_id" jdbcType="BIGINT" property="courseId" />
    <result column="course_times" jdbcType="INTEGER" property="courseTimes" />
    <result column="course_datetime" jdbcType="TIMESTAMP" property="courseDatetime" />
    <result column="teacher_price" jdbcType="VARCHAR" property="teacherPrice" />
    <result column="per_time" jdbcType="INTEGER" property="perTime" />
    <result column="sign_in" jdbcType="TINYINT" property="signIn" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="creator" jdbcType="INTEGER" property="creator" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="operator" jdbcType="INTEGER" property="operator" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, teacher_id, course_id, course_times, course_datetime, teacher_price, per_time,
    sign_in, `status`, creator, create_time, `operator`, operate_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from course_schedule
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="queryByCourseId"  resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from course_schedule
    where status= 1
    and course_id = #{id}
    order by id
  </select>
  <select id="queryByIds"  resultMap="BaseResultMap">
  <!--@mbg.generated-->
  select
  <include refid="Base_Column_List" />
  from course_schedule
  where status= 1
  and id in
    <foreach collection="ids" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
</select>
  <update id="signIn">
    update course_schedule
    set operator = #{operator} , operate_time = now() ,sign_in = 1
    where id = #{id}
  </update>
  <update id="invalidByCourseId">
    update course_schedule
    set status = 0 ,operator =#{operator},operate_time = now()
    where status =1  and course_id = #{courseId}
  </update>
  <update id="changeTeacher">
    update course_schedule
    set operator =0,operate_time = now(),teacher_id = #{newTeacherId}
    where status =1  and course_id = #{courseId}
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.nmt.education.pojo.po.CourseSchedulePo">
    <!--@mbg.generated-->
    update course_schedule
    <set>
      <if test="teacherId != null">
        teacher_id = #{teacherId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="courseTimes != null">
        course_times = #{courseTimes,jdbcType=INTEGER},
      </if>
      <if test="courseDatetime != null">
        course_datetime = #{courseDatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="teacherPrice != null">
        teacher_price = #{teacherPrice,jdbcType=VARCHAR},
      </if>
      <if test="perTime != null">
        per_time = #{perTime,jdbcType=INTEGER},
      </if>
      <if test="signIn != null">
        sign_in = #{signIn,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=INTEGER},
      </if>
      <if test="operateTime != null">
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update course_schedule
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="teacher_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.teacherId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.teacherId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="course_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.courseId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.courseId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="course_times = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.courseTimes != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.courseTimes,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="course_datetime = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.courseDatetime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.courseDatetime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="teacher_price = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.teacherPrice != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.teacherPrice,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="per_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.perTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.perTime,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="sign_in = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.signIn != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.signIn,jdbcType=TINYINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.status != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=TINYINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="creator = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.creator != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.creator,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="`operator` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.operator != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.operator,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="operate_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.operateTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.operateTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into course_schedule
    (teacher_id, course_id, course_times, course_datetime, teacher_price, per_time, sign_in,
      `status`, creator, create_time, `operator`, operate_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.teacherId,jdbcType=BIGINT}, #{item.courseId,jdbcType=BIGINT}, #{item.courseTimes,jdbcType=INTEGER},
        #{item.courseDatetime,jdbcType=TIMESTAMP}, #{item.teacherPrice,jdbcType=VARCHAR},
        #{item.perTime,jdbcType=INTEGER}, #{item.signIn,jdbcType=TINYINT}, #{item.status,jdbcType=TINYINT},
        #{item.creator,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.operator,jdbcType=INTEGER},
        #{item.operateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <select id="teacherSchedule" resultType="com.nmt.education.pojo.vo.TeacherScheduleDto">
    select cs.course_id as courseId ,c.name as courseName ,c.course_subject as courseSubject
    ,t.name as teacherName,c.grade as grade,cs.teacher_price as teacherPrice,cs.sign_in as signInStatus
    ,c.campus as campus ,cs.course_datetime as courseDate,cs.teacher_id as teacherId
    from course_schedule cs
    inner join course c on cs.course_id = c.id and c.status =1
        and c.campus in
        <foreach collection="campusList" item="campus" open="(" close=")" separator=",">
          #{campus}
        </foreach>
    inner join teacher t on c.teacher_id = t.id
    where 1=1
    <if test="startDate != null">
      <![CDATA[
      and  cs.course_datetime >= #{startDate}
        ]]>
    </if>
    <if test="endDate!=null">
      <![CDATA[
      and cs.course_datetime <= #{endDate}
        ]]>
    </if>
  </select>
</mapper>