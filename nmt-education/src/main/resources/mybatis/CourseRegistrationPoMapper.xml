<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nmt.education.service.course.registeration.CourseRegistrationPoMapper">
    <resultMap id="BaseResultMap" type="com.nmt.education.pojo.po.CourseRegistrationPo">
        <!--@mbg.generated-->
        <!--@Table course_registration-->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="registration_number" jdbcType="VARCHAR" property="registrationNumber"/>
        <result column="course_id" jdbcType="BIGINT" property="courseId"/>
        <result column="student_id" jdbcType="BIGINT" property="studentId"/>
        <result column="times" jdbcType="TINYINT" property="times"/>
        <result column="registration_type" jdbcType="TINYINT" property="registrationType"/>
        <result column="registration_status" jdbcType="TINYINT" property="registrationStatus"/>
        <result column="fee_status" jdbcType="TINYINT" property="feeStatus"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="balance_amount" jdbcType="VARCHAR" property="balanceAmount"/>
        <result column="total_amount" jdbcType="VARCHAR" property="totalAmount"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="creator" jdbcType="INTEGER" property="creator"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="operator" jdbcType="INTEGER" property="operator"/>
        <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime"/>
    </resultMap>

    <resultMap id="CourseRegistrationVoResultMap" extends="BaseResultMap" type="com.nmt.education.pojo.vo.CourseRegistrationVo">
        <result column="s_name" jdbcType="VARCHAR" property="studentName"/>
        <result column="c_name" jdbcType="VARCHAR" property="courseName"/>
        <result column="cr_registerTime" jdbcType="DATE" property="registerTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, registration_number, course_id, student_id, times, registration_type, registration_status,
        fee_status, `status`, balance_amount, total_amount, remark, creator, create_time,
        `operator`, operate_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from course_registration
        where id = #{id,jdbcType=BIGINT}
    </select>
    <select id="queryByDto" parameterType="com.nmt.education.pojo.dto.req.RegisterSearchReqDto"
            resultMap="CourseRegistrationVoResultMap">
        select cr.*,s.name as s_name,c.name as c_name,cr.create_time as cr_registerTime
        from course_registration cr
        inner join course c on c.id= cr.course_id
        inner join student s on s.id =cr.student_id
        where cr.status = 1
        <if test="dto.grade != null">
            and c.grade = #{dto.grade}
        </if>
        <if test="dto.courseSubject != null">
            and c.course_subject = #{dto.courseSubject}
        </if>
        <if test="dto.courseType != null">
            and c.course_type = #{dto.courseType}
        </if>
        <if test="dto.studentId != null">
            and cr.student_id =#{dto.studentId}
        </if>
    </select>

    <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.nmt.education.pojo.po.CourseRegistrationPo"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into course_registration
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="registrationNumber != null">
                registration_number,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="times != null">
                times,
            </if>
            <if test="registrationType != null">
                registration_type,
            </if>
            <if test="registrationStatus != null">
                registration_status,
            </if>
            <if test="feeStatus != null">
                fee_status,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="balanceAmount != null">
                balance_amount,
            </if>
            <if test="totalAmount != null">
                total_amount,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="operator != null">
                `operator`,
            </if>
            <if test="operateTime != null">
                operate_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="registrationNumber != null">
                #{registrationNumber,jdbcType=VARCHAR},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=BIGINT},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=BIGINT},
            </if>
            <if test="times != null">
                #{times,jdbcType=TINYINT},
            </if>
            <if test="registrationType != null">
                #{registrationType,jdbcType=TINYINT},
            </if>
            <if test="registrationStatus != null">
                #{registrationStatus,jdbcType=TINYINT},
            </if>
            <if test="feeStatus != null">
                #{feeStatus,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="balanceAmount != null">
                #{balanceAmount,jdbcType=VARCHAR},
            </if>
            <if test="totalAmount != null">
                #{totalAmount,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operator != null">
                #{operator,jdbcType=INTEGER},
            </if>
            <if test="operateTime != null">
                #{operateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.nmt.education.pojo.po.CourseRegistrationPo">
        <!--@mbg.generated-->
        update course_registration
        <set>
            <if test="registrationNumber != null">
                registration_number = #{registrationNumber,jdbcType=VARCHAR},
            </if>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=BIGINT},
            </if>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=BIGINT},
            </if>
            <if test="times != null">
                times = #{times,jdbcType=TINYINT},
            </if>
            <if test="registrationType != null">
                registration_type = #{registrationType,jdbcType=TINYINT},
            </if>
            <if test="registrationStatus != null">
                registration_status = #{registrationStatus,jdbcType=TINYINT},
            </if>
            <if test="feeStatus != null">
                fee_status = #{feeStatus,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=TINYINT},
            </if>
            <if test="balanceAmount != null">
                balance_amount = #{balanceAmount,jdbcType=VARCHAR},
            </if>
            <if test="totalAmount != null">
                total_amount = #{totalAmount,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operator != null">
                `operator` = #{operator,jdbcType=INTEGER},
            </if>
            <if test="operateTime != null">
                operate_time = #{operateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateBatch" parameterType="java.util.List">
        <!--@mbg.generated-->
        update course_registration
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="registration_number = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.registrationNumber,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="course_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.courseId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="student_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.studentId,jdbcType=BIGINT}
                </foreach>
            </trim>
            <trim prefix="times = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.times,jdbcType=TINYINT}
                </foreach>
            </trim>
            <trim prefix="registration_type = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.registrationType,jdbcType=TINYINT}
                </foreach>
            </trim>
            <trim prefix="registration_status = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.registrationStatus,jdbcType=TINYINT}
                </foreach>
            </trim>
            <trim prefix="fee_status = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.feeStatus,jdbcType=TINYINT}
                </foreach>
            </trim>
            <trim prefix="`status` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=TINYINT}
                </foreach>
            </trim>
            <trim prefix="balance_amount = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.balanceAmount,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="total_amount = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.totalAmount,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="remark = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.remark,jdbcType=VARCHAR}
                </foreach>
            </trim>
            <trim prefix="creator = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.creator,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
            <trim prefix="`operator` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.operator,jdbcType=INTEGER}
                </foreach>
            </trim>
            <trim prefix="operate_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    when id = #{item.id,jdbcType=BIGINT} then #{item.operateTime,jdbcType=TIMESTAMP}
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <update id="updateBatchSelective" parameterType="java.util.List">
        <!--@mbg.generated-->
        update course_registration
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="registration_number = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.registrationNumber != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.registrationNumber,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="course_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.courseId != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.courseId,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="student_id = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.studentId != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.studentId,jdbcType=BIGINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="times = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.times != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.times,jdbcType=TINYINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="registration_type = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.registrationType != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.registrationType,jdbcType=TINYINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="registration_status = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.registrationStatus != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.registrationStatus,jdbcType=TINYINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="fee_status = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.feeStatus != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.feeStatus,jdbcType=TINYINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`status` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.status != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=TINYINT}
                    </if>
                </foreach>
            </trim>
            <trim prefix="balance_amount = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.balanceAmount != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.balanceAmount,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="total_amount = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.totalAmount != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.totalAmount,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="remark = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.remark != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.remark,jdbcType=VARCHAR}
                    </if>
                </foreach>
            </trim>
            <trim prefix="creator = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.creator != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.creator,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="create_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.createTime != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
            <trim prefix="`operator` = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.operator != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.operator,jdbcType=INTEGER}
                    </if>
                </foreach>
            </trim>
            <trim prefix="operate_time = case" suffix="end,">
                <foreach collection="list" index="index" item="item">
                    <if test="item.operateTime != null">
                        when id = #{item.id,jdbcType=BIGINT} then #{item.operateTime,jdbcType=TIMESTAMP}
                    </if>
                </foreach>
            </trim>
        </trim>
        where id in
        <foreach close=")" collection="list" item="item" open="(" separator=", ">
            #{item.id,jdbcType=BIGINT}
        </foreach>
    </update>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into course_registration
        (registration_number, course_id, student_id, times, registration_type, registration_status,
        fee_status, `status`, balance_amount, total_amount, remark, creator, create_time,
        `operator`, operate_time)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.registrationNumber,jdbcType=VARCHAR}, #{item.courseId,jdbcType=BIGINT}, #{item.studentId,jdbcType=BIGINT},
            #{item.times,jdbcType=TINYINT}, #{item.registrationType,jdbcType=TINYINT}, #{item.registrationStatus,jdbcType=TINYINT},
            #{item.feeStatus,jdbcType=TINYINT}, #{item.status,jdbcType=TINYINT}, #{item.balanceAmount,jdbcType=VARCHAR},
            #{item.totalAmount,jdbcType=VARCHAR}, #{item.remark,jdbcType=VARCHAR}, #{item.creator,jdbcType=INTEGER},
            #{item.createTime,jdbcType=TIMESTAMP}, #{item.operator,jdbcType=INTEGER}, #{item.operateTime,jdbcType=TIMESTAMP}
            )
        </foreach>
    </insert>
    <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.nmt.education.pojo.po.CourseRegistrationPo"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into course_registration
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            registration_number,
            course_id,
            student_id,
            times,
            registration_type,
            registration_status,
            fee_status,
            `status`,
            balance_amount,
            total_amount,
            remark,
            creator,
            create_time,
            `operator`,
            operate_time,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            #{registrationNumber,jdbcType=VARCHAR},
            #{courseId,jdbcType=BIGINT},
            #{studentId,jdbcType=BIGINT},
            #{times,jdbcType=TINYINT},
            #{registrationType,jdbcType=TINYINT},
            #{registrationStatus,jdbcType=TINYINT},
            #{feeStatus,jdbcType=TINYINT},
            #{status,jdbcType=TINYINT},
            #{balanceAmount,jdbcType=VARCHAR},
            #{totalAmount,jdbcType=VARCHAR},
            #{remark,jdbcType=VARCHAR},
            #{creator,jdbcType=INTEGER},
            #{createTime,jdbcType=TIMESTAMP},
            #{operator,jdbcType=INTEGER},
            #{operateTime,jdbcType=TIMESTAMP},
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            registration_number = #{registrationNumber,jdbcType=VARCHAR},
            course_id = #{courseId,jdbcType=BIGINT},
            student_id = #{studentId,jdbcType=BIGINT},
            times = #{times,jdbcType=TINYINT},
            registration_type = #{registrationType,jdbcType=TINYINT},
            registration_status = #{registrationStatus,jdbcType=TINYINT},
            fee_status = #{feeStatus,jdbcType=TINYINT},
            `status` = #{status,jdbcType=TINYINT},
            balance_amount = #{balanceAmount,jdbcType=VARCHAR},
            total_amount = #{totalAmount,jdbcType=VARCHAR},
            remark = #{remark,jdbcType=VARCHAR},
            creator = #{creator,jdbcType=INTEGER},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            `operator` = #{operator,jdbcType=INTEGER},
            operate_time = #{operateTime,jdbcType=TIMESTAMP},
        </trim>
    </insert>
    <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.nmt.education.pojo.po.CourseRegistrationPo"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into course_registration
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="registrationNumber != null">
                registration_number,
            </if>
            <if test="courseId != null">
                course_id,
            </if>
            <if test="studentId != null">
                student_id,
            </if>
            <if test="times != null">
                times,
            </if>
            <if test="registrationType != null">
                registration_type,
            </if>
            <if test="registrationStatus != null">
                registration_status,
            </if>
            <if test="feeStatus != null">
                fee_status,
            </if>
            <if test="status != null">
                `status`,
            </if>
            <if test="balanceAmount != null">
                balance_amount,
            </if>
            <if test="totalAmount != null">
                total_amount,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="creator != null">
                creator,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="operator != null">
                `operator`,
            </if>
            <if test="operateTime != null">
                operate_time,
            </if>
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="registrationNumber != null">
                #{registrationNumber,jdbcType=VARCHAR},
            </if>
            <if test="courseId != null">
                #{courseId,jdbcType=BIGINT},
            </if>
            <if test="studentId != null">
                #{studentId,jdbcType=BIGINT},
            </if>
            <if test="times != null">
                #{times,jdbcType=TINYINT},
            </if>
            <if test="registrationType != null">
                #{registrationType,jdbcType=TINYINT},
            </if>
            <if test="registrationStatus != null">
                #{registrationStatus,jdbcType=TINYINT},
            </if>
            <if test="feeStatus != null">
                #{feeStatus,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="balanceAmount != null">
                #{balanceAmount,jdbcType=VARCHAR},
            </if>
            <if test="totalAmount != null">
                #{totalAmount,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                #{creator,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operator != null">
                #{operator,jdbcType=INTEGER},
            </if>
            <if test="operateTime != null">
                #{operateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
        on duplicate key update
        <trim suffixOverrides=",">
            <if test="id != null">
                id = #{id,jdbcType=BIGINT},
            </if>
            <if test="registrationNumber != null">
                registration_number = #{registrationNumber,jdbcType=VARCHAR},
            </if>
            <if test="courseId != null">
                course_id = #{courseId,jdbcType=BIGINT},
            </if>
            <if test="studentId != null">
                student_id = #{studentId,jdbcType=BIGINT},
            </if>
            <if test="times != null">
                times = #{times,jdbcType=TINYINT},
            </if>
            <if test="registrationType != null">
                registration_type = #{registrationType,jdbcType=TINYINT},
            </if>
            <if test="registrationStatus != null">
                registration_status = #{registrationStatus,jdbcType=TINYINT},
            </if>
            <if test="feeStatus != null">
                fee_status = #{feeStatus,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                `status` = #{status,jdbcType=TINYINT},
            </if>
            <if test="balanceAmount != null">
                balance_amount = #{balanceAmount,jdbcType=VARCHAR},
            </if>
            <if test="totalAmount != null">
                total_amount = #{totalAmount,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="creator != null">
                creator = #{creator,jdbcType=INTEGER},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="operator != null">
                `operator` = #{operator,jdbcType=INTEGER},
            </if>
            <if test="operateTime != null">
                operate_time = #{operateTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
</mapper>