<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nmt.education.service.course.registeration.RegistrationExpenseDetailPoMapper">
  <resultMap id="BaseResultMap" type="com.nmt.education.pojo.po.RegistrationExpenseDetailPo">
    <!--@mbg.generated-->
    <!--@Table registration_expense_detail-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="registration_id" jdbcType="BIGINT" property="registrationId" />
    <result column="fee_type" jdbcType="TINYINT" property="feeType" />
    <result column="fee_status" jdbcType="TINYINT" property="feeStatus" />
    <result column="amount" jdbcType="VARCHAR" property="amount" />
    <result column="per_amount" jdbcType="VARCHAR" property="perAmount" />
    <result column="account_amount" jdbcType="VARCHAR" property="accountAmount" />
    <result column="count" jdbcType="TINYINT" property="count" />
    <result column="discount" jdbcType="VARCHAR" property="discount" />
    <result column="payment" jdbcType="TINYINT" property="payment" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="fee_direction" jdbcType="TINYINT" property="feeDirection" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="creator" jdbcType="INTEGER" property="creator" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="operator" jdbcType="INTEGER" property="operator" />
    <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime" />

  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, registration_id, fee_type, fee_status, amount, per_amount, `count`, discount,
    payment, `status`, remark, creator, create_time, `operator`, operate_time,fee_direction
  </sql>
  <select id="selectByPrimaryKey"  resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from registration_expense_detail
    where id = #{id}
  </select>

  <select id="selectByIds"  resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from registration_expense_detail
    where
    id in
    <foreach collection="ids" item="id" close=")" open="(" separator=",">
      #{id}
    </foreach>

  </select>
  <select id="queryRegisterId" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <include refid="Base_Column_List" />
    from registration_expense_detail
    where status = 1
    and registration_id = #{registerId}
  </select>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.nmt.education.pojo.po.RegistrationExpenseDetailPo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into registration_expense_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="registrationId != null">
        registration_id,
      </if>
      <if test="feeType != null">
        fee_type,
      </if>
      <if test="feeStatus != null">
        fee_status,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="perAmount != null">
        per_amount,
      </if>
      <if test="count != null">
        `count`,
      </if>
      <if test="discount != null">
        discount,
      </if>
      <if test="payment != null">
        payment,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="operator != null">
        `operator`,
      </if>
      <if test="operateTime != null">
        operate_time,
      </if>
      <if test="feeDirection != null">
        fee_direction,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="registrationId != null">
        #{registrationId,jdbcType=BIGINT},
      </if>
      <if test="feeType != null">
        #{feeType,jdbcType=TINYINT},
      </if>
      <if test="feeStatus != null">
        #{feeStatus,jdbcType=TINYINT},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=VARCHAR},
      </if>
      <if test="perAmount != null">
        #{perAmount,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        #{count,jdbcType=TINYINT},
      </if>
      <if test="discount != null">
        #{discount,jdbcType=VARCHAR},
      </if>
      <if test="payment != null">
        #{payment,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=INTEGER},
      </if>
      <if test="operateTime != null">
        #{operateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="feeDirection != null">
        #{feeDirection},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nmt.education.pojo.po.RegistrationExpenseDetailPo">
    <!--@mbg.generated-->
    update registration_expense_detail
    <set>
      <if test="registrationId != null">
        registration_id = #{registrationId,jdbcType=BIGINT},
      </if>
      <if test="feeType != null">
        fee_type = #{feeType,jdbcType=TINYINT},
      </if>
      <if test="feeStatus != null">
        fee_status = #{feeStatus,jdbcType=TINYINT},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=VARCHAR},
      </if>
      <if test="perAmount != null">
        per_amount = #{perAmount,jdbcType=VARCHAR},
      </if>
      <if test="count != null">
        `count` = #{count,jdbcType=TINYINT},
      </if>
      <if test="discount != null">
        discount = #{discount,jdbcType=VARCHAR},
      </if>
      <if test="payment != null">
        payment = #{payment,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="operator != null">
        `operator` = #{operator,jdbcType=INTEGER},
      </if>
      <if test="operateTime != null">
        operate_time = #{operateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update registration_expense_detail
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="registration_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.registrationId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="fee_type = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.feeType,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="fee_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.feeStatus,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="amount = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.amount,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="per_amount = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.perAmount,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`count` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.count,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="discount = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.discount,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="payment = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.payment,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.status,jdbcType=TINYINT}
        </foreach>
      </trim>
      <trim prefix="remark = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.remark,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="creator = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.creator,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="`operator` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.operator,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="operate_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.operateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into registration_expense_detail
    (registration_id, fee_type, fee_status, amount, per_amount, `count`, discount,
      payment, `status`, remark, creator, create_time, `operator`, operate_time,fee_direction)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.registrationId,jdbcType=BIGINT}, #{item.feeType,jdbcType=TINYINT},
        #{item.feeStatus,jdbcType=TINYINT}, #{item.amount,jdbcType=VARCHAR}, #{item.perAmount,jdbcType=VARCHAR},
        #{item.count,jdbcType=TINYINT}, #{item.discount,jdbcType=VARCHAR}, #{item.payment,jdbcType=TINYINT},
        #{item.status,jdbcType=TINYINT}, #{item.remark,jdbcType=VARCHAR}, #{item.creator,jdbcType=INTEGER},
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.operator,jdbcType=INTEGER}, #{item.operateTime,jdbcType=TIMESTAMP},
        #{item.feeDirection}
        )
    </foreach>
  </insert>
 </mapper>