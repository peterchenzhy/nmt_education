<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nmt.education.service.course.registeration.RegistrationExpenseDetailFlowMapper">
    <resultMap id="BaseResultMap" type="com.nmt.education.pojo.po.RegistrationExpenseDetailFlowPo">
        <!--@mbg.generated-->
        <!--@Table registration_expense_detail_flow-->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="registration_id" jdbcType="BIGINT" property="registrationId"/>
        <result column="register_expense_detail_id" jdbcType="BIGINT" property="registerExpenseDetailId"/>
        <result column="fee_type" jdbcType="INTEGER" property="feeType"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="per_amount" jdbcType="VARCHAR" property="perAmount"/>
        <result column="amount" jdbcType="VARCHAR" property="amount"/>
        <result column="account_amount" jdbcType="VARCHAR" property="accountAmount"/>
        <result column="count" jdbcType="INTEGER" property="count"/>
        <result column="payment" jdbcType="INTEGER" property="payment"/>
        <result column="discount" jdbcType="VARCHAR" property="discount"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="creator" jdbcType="INTEGER" property="creator"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="operator" jdbcType="INTEGER" property="operator"/>
        <result column="operate_time" jdbcType="TIMESTAMP" property="operateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        id, registration_id, register_expense_detail_id, fee_type, `type`, per_amount, amount, account_amount,
        `count`, payment, discount, `status`, remark, creator, create_time, `operator`, operate_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from registration_expense_detail_flow
        where id = #{id,jdbcType=INTEGER}
    </select>
    <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into registration_expense_detail_flow
        (registration_id, register_expense_detail_id, fee_type, `type`, per_amount, amount,
        `count`, payment, discount, `status`, remark, creator, create_time, `operator`,
        operate_time,account_amount)
        values
        <foreach collection="list" item="item" separator=",">
            (#{item.registrationId,jdbcType=BIGINT}, #{item.registerExpenseDetailId,jdbcType=BIGINT},
            #{item.feeType,jdbcType=INTEGER}, #{item.type,jdbcType=INTEGER}, #{item.perAmount,jdbcType=VARCHAR},
            #{item.amount,jdbcType=VARCHAR}, #{item.count,jdbcType=INTEGER}, #{item.payment,jdbcType=INTEGER},
            #{item.discount,jdbcType=VARCHAR}, #{item.status,jdbcType=BOOLEAN}, #{item.remark,jdbcType=VARCHAR},
            #{item.creator,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.operator,jdbcType=INTEGER},
            #{item.operateTime,jdbcType=TIMESTAMP},#{item.accountAmount})
        </foreach>
    </insert>
    <select id="queryByRegisterId" resultMap="BaseResultMap">
    select * from registration_expense_detail_flow where status = 1 and registration_id = #{registerId}
  </select>
    <select id="feeStatistics" resultType="com.nmt.education.pojo.vo.FeeStatisticsVo">
        select cr.registration_number as registrationNumber , cr.course_id as courseId ,cr.student_id as studentId
        ,c.campus as campus ,flow.payment as payment
        , c.name as courseName ,s.name as studentName ,flow.create_time as feeTime,flow.amount as amount ,flow.type as feeFlowType
        ,cr.remark as remark,u.code as userCode ,u.name as userName
        from registration_expense_detail_flow flow
        inner join course_registration cr on flow.registration_id = cr.id and cr.status = 1
        inner join course c on cr.course_id = c.id and c.status = 1
        inner join user u on u.code = flow.creator
        and c.campus in
        <if test="campusList != null and campusList.size() != 0">
            <foreach collection="campusList" item="campus" open="(" close=")" separator=",">
                #{campus}
            </foreach>
        </if>
        <if test="campusList == null or campusList.size() == 0">
            (-1)
        </if>
        inner join student s on cr.student_id = s.id
        where flow.status = 1
        and flow.type in
        <if test="typeList != null and typeList.size() != 0">
            <foreach collection="typeList" item="type" open="(" close=")" separator=",">
                #{type}
            </foreach>
        </if>
        <if test="typeList == null or typeList.size() == 0">
            (-1)
        </if>
        <if test="startDate != null">
            <![CDATA[
            and flow.create_time >= #{startDate}
        ]]>
        </if>
        <if test="endDate != null">
            <![CDATA[
            and flow.create_time <= #{endDate}     ]]>
        </if>
        <if test="year != null">
            and c.year = #{year}
        </if>
        <if test="season != null">
            and c.season = #{season}
        </if>
        <if test="userCode != null">
            and flow.creator = #{userCode}
        </if>
        order by flow.id desc
    </select>
    <select id="flowSummary" resultType="java.lang.String">
        select flow.amount
        from registration_expense_detail_flow flow
        inner join course_registration cr on flow.registration_id = cr.id and cr.status = 1
        inner join course c on cr.course_id = c.id and c.status = 1
        and c.campus in
        <foreach collection="campusList" item="campus" open="(" close=")" separator=",">
            #{campus}
        </foreach>
        where flow.status= 1
        and flow.type in
        <foreach collection="type" item="t" open="(" close=")" separator=",">
            #{t}
        </foreach>
        <if test="startDate != null">
            <![CDATA[
            and flow.create_time >= #{startDate}
        ]]>
        </if>
        <if test="endDate != null">
            <![CDATA[
            and flow.create_time <= #{endDate}     ]]>
        </if>
        <if test="year != null">
            and c.year = #{year}
        </if>
        <if test="season != null">
            and c.season = #{season}
        </if>
        <if test="userCode != null">
            and flow.creator=#{userCode}
        </if>
    </select>
</mapper>